// <auto-generated />
using System;
using Inkluzitron.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Inkluzitron.Migrations
{
    [DbContext(typeof(BotDatabaseContext))]
    partial class BotDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Inkluzitron.Data.Entities.QuizItem", b =>
                {
                    b.Property<long>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ParentResultId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemId");

                    b.HasIndex("ParentResultId");

                    b.ToTable("QuizItems");

                    b.HasDiscriminator<string>("Discriminator").HasValue("QuizItem");
                });

            modelBuilder.Entity("Inkluzitron.Data.Entities.QuizResult", b =>
                {
                    b.Property<long>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("SubmittedById")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubmittedByName")
                        .HasColumnType("TEXT");

                    b.HasKey("ResultId");

                    b.ToTable("QuizResults");

                    b.HasDiscriminator<string>("Discriminator").HasValue("QuizResult");
                });

            modelBuilder.Entity("Inkluzitron.Data.Entities.RoleMenuMessage", b =>
                {
                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("MessageId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanSelectMultiple")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("GuildId", "ChannelId", "MessageId");

                    b.ToTable("UserRoleMessage");
                });

            modelBuilder.Entity("Inkluzitron.Data.Entities.RoleMenuMessageRole", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("MessageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Emote")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mention")
                        .HasColumnType("TEXT");

                    b.HasKey("Id", "GuildId", "ChannelId", "MessageId");

                    b.HasIndex("GuildId", "ChannelId", "MessageId");

                    b.ToTable("UserRoleMessageItem");
                });

            modelBuilder.Entity("Inkluzitron.Data.Entities.User", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastMessagePointsIncrement")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastReactionPointsIncrement")
                        .HasColumnType("TEXT");

                    b.Property<long>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Inkluzitron.Data.Entities.QuizDoubleItem", b =>
                {
                    b.HasBaseType("Inkluzitron.Data.Entities.QuizItem");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasDiscriminator().HasValue("QuizDoubleItem");
                });

            modelBuilder.Entity("Inkluzitron.Data.Entities.BdsmTestOrgQuizResult", b =>
                {
                    b.HasBaseType("Inkluzitron.Data.Entities.QuizResult");

                    b.Property<string>("Link")
                        .HasColumnType("TEXT");

                    b.HasIndex("Link")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("BdsmTestOrgQuizResult");
                });

            modelBuilder.Entity("Inkluzitron.Data.Entities.QuizItem", b =>
                {
                    b.HasOne("Inkluzitron.Data.Entities.QuizResult", "Parent")
                        .WithMany("Items")
                        .HasForeignKey("ParentResultId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Inkluzitron.Data.Entities.RoleMenuMessageRole", b =>
                {
                    b.HasOne("Inkluzitron.Data.Entities.RoleMenuMessage", "Message")
                        .WithMany("Roles")
                        .HasForeignKey("GuildId", "ChannelId", "MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("Inkluzitron.Data.Entities.QuizResult", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Inkluzitron.Data.Entities.RoleMenuMessage", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
